version: '3.4'

services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development # Stage that you want to use (see in Dockerfile stage)
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb-normal
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - billing
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000

  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development # Stage that you want to use (see in Dockerfile stage)
    command: npm run start:dev billing
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb-normal
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - 3001:3001
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb-normal
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672

  mongodb-normal:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_master_data:/data/db
    ports:
      - 27017:27017

volumes:
  mongodb_master_data:
    driver: local
